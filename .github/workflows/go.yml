name: Go

on:
  push:
    branches:
      - main
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*
  pull_request:

jobs:
  test:
    name: Test
    strategy:
      matrix:
        postgresql-image:
          - postgres:13
          - postgres:14
          - postgres:15
          - postgres:16
          - postgres:17
          - postgres:18
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version-file: ${{ github.workspace }}/go.mod

    - name: Run checks
      run: |
        go build -modfile=tools/go.mod -o bin/golangci-lint github.com/golangci/golangci-lint/cmd/golangci-lint
        go build -modfile=tools/go.mod -o bin/reviewdog github.com/reviewdog/reviewdog/cmd/reviewdog
        bin/golangci-lint run -c=.golangci.yml --out-format=line-number | env REVIEWDOG_GITHUB_API_TOKEN=${{ secrets.GITHUB_TOKEN }} bin/reviewdog -f=golangci-lint -level=error -reporter=github-pr-review

    - name: Run Tests
      run: |
        sudo chown 999:999 testdata/ssl/server/*
        sudo chmod 600 testdata/ssl/server/*
        docker compose up -d
        make
        make test
      env:
        POSTGRESQL_IMAGE: ${{ matrix.postgresql-image }}

    - name: Run debug commands on failure
      if: ${{ failure() }}
      run: |
        env | sort
        go env | sort
        git status
        docker --version
        docker compose --version
        docker compose logs
